#!/bin/bash

# Copyright (c) 2024-2024 Burak Günaydin
# All Rights Reserved
#
# This software is the confidential and proprietary information of
# Burak Günaydin. You may not use, modify, or distribute this
# software (unless you have the permission of the copyright holder)
# except in accordance with the terms of any applicable license agreement.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.

#########################################################
#################### START CMD PARSE ####################
#########################################################

# Check if there are any arguments
if [ "$#" -gt 0 ]; then
    echo
    echo "Hint: This script does not accept any arguments. Proceeding anyways ..."
    echo
fi

#######################################################
#################### END CMD PARSE ####################
#######################################################

#######################################################
#################### SCRIPT START #####################
#######################################################

# Asking for sudo permissions before script executes any further and surpresses usage information
sudo 2>/dev/null

# Get the directory of the script and navigate to it.
# Necessary code-repetition to ensure being able to execute script from anywhere
script_directory=$(dirname "$(readlink -f "$0")")
cd "$script_directory" || exit 1
cd ../files

mkdir --parents ~temp/ssl
cd ssl

sudo apt install -y openssl

# Become a Certificate Authority
# Generate private key
openssl genrsa -des3 -out CA.key 2048
# Generate root certificate
openssl req -x509 -new -nodes -key CA.key -sha256 -days 825 -out CA.pem

# Create CA-signed certs
# Generate a private key
openssl genrsa -out private.key 2048
# Create a certificate-signing request
openssl req -new -key private.key -out certificate-request.csr
# Create a config file for the extensions
>config.ext cat <<-EOF
authorityKeyIdentifier=keyid,issuer
basicConstraints=CA:FALSE
keyUsage = digitalSignature, nonRepudiation, keyEncipherment, dataEncipherment
subjectAltName = @alt_names
[alt_names]
DNS.1 = localhost # Be sure to include the domain name here because Common Name is not so commonly honoured by itself
EOF
# Create the signed certificate
openssl x509 -req -in certificate-request.csr -CA CA.pem -CAkey CA.key -CAcreateserial -out certificate.crt -days 825 -sha256 -extfile config.ext
# Generate a windows-compatible CA-file
openssl pkcs12 -export -out CA.pfx -inkey CA.key -in CA.pem
# Copyright (c) 2024 Burak Günaydin
# All Rights Reserved
#
# This software is the confidential and proprietary information of
# Burak Günaydin. You may not use, modify, or distribute this
# software (unless you have the permission of the copyright holder)
# except in accordance with the terms of any applicable license agreement.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.

server {
  # Redirection of http to https
  listen 80 default_server;  # Listen on port 80 for IPv4
  listen [::]:80 default_server;  # Listen on port 80 for IPv6

  return 301 https://$host$request_uri;  # Redirect all HTTP requests to HTTPS
}

server {
    # SSL configuration
    listen 443 ssl http2 default_server;  # Listen on port 443 for IPv4 with SSL and HTTP/2
    listen [::]:443 ssl http2 default_server;  # Listen on port 443 for IPv6 with SSL and HTTP/2

    # Host resolution
    server_name 0.0.0.0;  # Server name for IPv4 wildcard address
    server_name 127.0.0.1;  # Server name for localhost IPv4
    server_name localhost;  # Server name for localhost

    # Selfsigned unsecure ssl certificate
    ssl_certificate /etc/nginx/conf.d/certificate.crt;  # Path to SSL certificate
    ssl_certificate_key /etc/nginx/conf.d/privateKey.key;  # Path to SSL certificate key

    root /usr/share/nginx/html;  # Root directory for serving files
    index index.html;  # Default file to serve

    client_max_body_size 100M;  # Maximum allowed size of client request body

    location ^~ / {
      try_files $uri /index.html =404;  # Try to serve the requested URI, fallback to index.html, return 404 if not found
    }

    location ^~ /api/ {
      resolver 127.0.0.11 valid=30s;  # DNS resolver for upstream server, cache valid for 30 seconds

      proxy_set_header Host $host;  # Set the Host header to the original host
      proxy_set_header X-Real-IP $remote_addr;  # Set the X-Real-IP header to the client IP
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;  # Set the X-Forwarded-For header to include the client IP
      proxy_set_header X-NginX-Proxy true;  # Custom header to indicate request is proxied by Nginx

      proxy_pass http://127.0.0.1:8000;  # Proxy pass to the backend server running on localhost:8000
    }

    location ^~ /dashboard/ {
      resolver 127.0.0.11 valid=30s;  # DNS resolver for upstream server, cache valid for 30 seconds

      proxy_set_header Host $host;  # Set the Host header to the original host
      proxy_set_header X-Real-IP $remote_addr;  # Set the X-Real-IP header to the client IP
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;  # Set the X-Forwarded-For header to include the client IP
      proxy_set_header X-NginX-Proxy true;  # Custom header to indicate request is proxied by Nginx

      proxy_pass http://$upstream:8800;  # Proxy pass to the backend server running on the specified upstream and port 8800
    }
}